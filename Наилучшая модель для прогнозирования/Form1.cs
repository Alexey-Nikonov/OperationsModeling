using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Наилучшая_модель_для_прогнозирования
{
    public partial class Form1 : Form
    {
        АвтоматПрогнозирования автоматПрогнозирования;
        private List<Запись> ВсеЗаписи;
        private int period;

        public Form1()
        {
            InitializeComponent();

            this.ВсеЗаписи = new List<Запись>();
            this.period = 12;
            this.автоматПрогнозирования = new АвтоматПрогнозирования
            {
                ОбновитьСтатусСостояния = (status) => { this.label1.Text = status; }
            };

            OpenFile();
        }

        private void OpenFile()
        {
            using (OpenFileDialog ofd = new OpenFileDialog() { Filter = "CSV|*.csv", ValidateNames = true })
            {
                if (ofd.ShowDialog() == DialogResult.OK)
                {
                    this.ВсеЗаписи.AddRange(Запись.ЗагрузитьВсеЗаписи(ofd.FileName));
                    this.всеЗаписиBindingSource.DataSource = this.ВсеЗаписи;
                }
            }
        }

        private void processButton_Click(object sender, EventArgs e)
        {
            decimal minLow, maxHigh; // наименьшее и набольшее значения за период
            decimal k, b; // коэффициенты уравнения
            List<Запись> ЗаписиПериода = this.ВсеЗаписи.Take(this.period).ToList();

            МодельПрогнозирования модельА = new МодельПрогнозирования();
            (k, b) = Формулы.МНК(
                this.ВсеЗаписи.Select(запись => запись.Close).ToList(),
                this.ВсеЗаписи.Select(запись => запись.Open).ToList());

            модельА.УравнениеПрямой = new УравнениеПрямой(k, ЗаписиПериода.Last().Open, b);
            модельА.ТеоритическиеЗначенияY = new List<decimal>();
            модельА.ТеоритическиеЗначенияY.Add(модельА.УравнениеПрямой.Решить());

            МодельПрогнозирования модельБ = new МодельПрогнозирования();            
            (k, b) = Формулы.МНК(
                this.ВсеЗаписи.Select(запись => запись.Close).ToList(),
                this.ВсеЗаписи.Select(запись => запись.High).ToList());

            maxHigh = Формулы.МаксимальныйМаксимум(ЗаписиПериода);
            модельБ.УравнениеПрямой = new УравнениеПрямой(k, maxHigh, b);
            модельБ.ТеоритическиеЗначенияY = new List<decimal>();
            модельБ.ТеоритическиеЗначенияY.Add(модельБ.УравнениеПрямой.Решить());

            МодельПрогнозирования модельС = new МодельПрогнозирования();
            (k, b) = Формулы.МНК(
                this.ВсеЗаписи.Select(запись => запись.Close).ToList(),
                this.ВсеЗаписи.Select(запись => запись.Low).ToList());

            minLow = Формулы.МинимальныйМинимум(ЗаписиПериода);
            модельС.УравнениеПрямой = new УравнениеПрямой(k, minLow, b);
            модельС.ТеоритическиеЗначенияY = new List<decimal>();
            модельС.ТеоритическиеЗначенияY.Add(модельС.УравнениеПрямой.Решить());

            List<decimal> списокЦенЗакрытияПериода; // статические y
            foreach (Запись запись in this.ВсеЗаписи.Skip(this.period))
            {
                списокЦенЗакрытияПериода = ЗаписиПериода.Take(ЗаписиПериода.Count).Select(записьПериода => записьПериода.Close).ToList();

                модельА.КоэффициентДетерминации =
                    Формулы.ПолучитьКоэффициентДетерминации(модельА.ТеоритическиеЗначенияY, списокЦенЗакрытияПериода);

                модельБ.КоэффициентДетерминации =
                    Формулы.ПолучитьКоэффициентДетерминации(модельБ.ТеоритическиеЗначенияY, списокЦенЗакрытияПериода);

                модельС.КоэффициентДетерминации =
                    Формулы.ПолучитьКоэффициентДетерминации(модельС.ТеоритическиеЗначенияY, списокЦенЗакрытияПериода);

                модельА.УравнениеПрямой = new УравнениеПрямой(k, запись.Open, b);
                модельА.ТеоритическиеЗначенияY.Add(модельА.УравнениеПрямой.Решить());

                maxHigh = Формулы.МаксимальныйМаксимум(ЗаписиПериода);
                модельБ.УравнениеПрямой = new УравнениеПрямой(k, maxHigh, b);
                модельБ.ТеоритическиеЗначенияY.Add(модельА.УравнениеПрямой.Решить());

                minLow = Формулы.МинимальныйМинимум(ЗаписиПериода);
                модельС.УравнениеПрямой = new УравнениеПрямой(k, minLow, b);
                модельС.ТеоритическиеЗначенияY.Add(модельА.УравнениеПрямой.Решить());

                this.автоматПрогнозирования.Ra2 = модельА.КоэффициентДетерминации;
                this.автоматПрогнозирования.Rb2 = модельБ.КоэффициентДетерминации;
                this.автоматПрогнозирования.Rc2 = модельС.КоэффициентДетерминации;

                this.автоматПрогнозирования.Обработать();

                ЗаписиПериода.RemoveAt(0);
                var nextIndex = this.ВсеЗаписи.IndexOf(запись) + 1 == this.ВсеЗаписи.Count ? 0 : this.ВсеЗаписи.IndexOf(запись) + 1;
                ЗаписиПериода.Add(this.ВсеЗаписи[nextIndex]);
            }
        }


    }
}
