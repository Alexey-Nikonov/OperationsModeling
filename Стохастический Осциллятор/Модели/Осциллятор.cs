using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Стохастический_Осциллятор
{
    public class Осциллятор
    {
        private IСостояние текущееСостояние;

        public ОжиданиеИнтерпретации ОжиданиеИнтерпретации { get; set; }
        public ОжиданиеКоманды ОжиданиеКоманды { get; set; }
        public ОжиданиеКомандыПродажи ОжиданиеКомандыПродажи { get; set; }
        public КомандаНаПродажуСтоп КомандаНаПродажуСтоп { get; set; }
        public ОжиданиеКомандыПокупки ОжиданиеКомандыПокупки { get; set; }
        public КомандаНаПокупкуСтоп КомандаНаПокупкуСтоп { get; set; }

        public decimal Kt { get; set; }
        public Запись Запись { get; set; }

        public Action<Запись> ДобавитьЗаписьВТаблицуПокупок;
        public Action<Запись> ДобавитьЗаписьВТаблицуПродаж;

        public Осциллятор()
        {
            this.ОжиданиеИнтерпретации = new ОжиданиеИнтерпретации(this);
            this.ОжиданиеКоманды = new ОжиданиеКоманды(this);
            this.ОжиданиеКомандыПродажи = new ОжиданиеКомандыПродажи(this);
            this.КомандаНаПродажуСтоп = new КомандаНаПродажуСтоп(this);
            this.ОжиданиеКомандыПокупки = new ОжиданиеКомандыПокупки(this);
            this.КомандаНаПокупкуСтоп = new КомандаНаПокупкуСтоп(this);

            this.текущееСостояние = this.ОжиданиеИнтерпретации;
        }

        public void Обработать()
        {
            this.текущееСостояние.ПерейтиКСледующему();
        }

        public void УстановитьСостояние(IСостояние состояние)
        {
            this.текущееСостояние = состояние;
        }        
    }
}

/*
 * 0 ожидание начала интерпретации k
 * 1 ожидание команды
 * 2 ожидание команды на продажу
 * 3 команда на продажу, остановить работу
 * 4 ожидание команды на покупку
 * 5 команда на покупку, остановить работу
 */
